The 'add_integer' module
.............

Parameter "b" is defaulted to int "98"
Parameters must be type int
Returns the sum of the Parameters

First import "add_integer"

>>>add_integer = __import__('0-add_integer').add_integer

You can now use it:

Basic usage:
     >>> add_integer(1,2)
    3

Negative input:
     >>> add_integer(100, -2)
      98

One parameter:
     >>> add_integer(2)
     100

One input:
     >>> add_integer(2)
     100

Float and negative input:
      >>> add_integer(100.3, -2)
      98

Float overflow:
     >>> add_integer(1500.5)
     1598

Float NaN:
     >>> add_integer(float('NaN'))
     Traceback (most recent call last):
     ...
     ValueError: cannot convert float NaN to integer

String input:
     >>> add_integer(4, "School")
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer

None input:
     >>> add_integer(None)
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer

Double negative float input:
     >>> add_integer(-100.5, -10.8)
     -110

Double string input:
     >>> add_integer("alx", "engineering")
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
